  
name: 'Development Pipeline'

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'

env:
  FORTRAN_COMPILER: gfortran-10
  CXX_COMPILER: g++-10
  NUM_PROCS: 8

# runs-on: ${{ matrix.os }}
# strategy:
#   matrix:
#     os: [macOS-10.14, ubuntu-18.04]

jobs:
  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive
      - name: Setup
        run: cmake -E make_directory ${{runner.workspace}}/sqrt/build
      - name: Configure
        working-directory: ${{runner.workspace}}/sqrt/build
        run: |
          cmake \
            -DCMAKE_Fortran_COMPILER:STRING=${{env.FORTRAN_COMPILER}} \
            -DCMAKE_CXX_COMPILER:STRING=${{env.CXX_COMPILER}} \
            -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
            -DBUILD_TESTING:BOOL=ON \
            -DCODECOV=ON \
            ${GITHUB_WORKSPACE}
      - name: Build
        working-directory: ${{runner.workspace}}/sqrt/build
        run: cmake --build . --target all -- -j ${{env.NUM_PROCS}}
      - name: Test
        working-directory: ${{runner.workspace}}/sqrt
        run: |
          ./build/unit_test/newtonraphson_utest
          ./build/sqrt_fortran 4
          ./build/sqrt_fortran_c 4
          ./build/sqrt_c 4
          ./build/sqrt_c_fortran 4
          python ./unit_test.py
      - name: Generate coverage report
        working-directory: ${{runner.workspace}}/sqrt
        run: |
          # pip install gcovr
          # cp `find . -name *.gcno` .
          # cp `find . -name *.gcda` .
          # gcov -b -l -p -c *.gcno
          # cd ..
          # gcovr -g -k -r . --xml -o sqrt_coverage.xml --verbose
          bash <(curl -s https://codecov.io/bash)
      # - name: Upload coverage report to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
      #     files: ${{runner.workspace}}/sqrt_coverage.xml #,./coverage2.xml # optional
      #     # flags: unittests # optional
      #     # name: codecov-umbrella # optional
      #     fail_ci_if_error: true # optional (default = false)
      #     verbose: true # optional (default = false)
